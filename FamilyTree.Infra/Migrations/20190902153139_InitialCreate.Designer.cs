// <auto-generated />
using System;
using FamilyTree.Infra.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FamilyTree.Infra.Migrations
{
    [DbContext(typeof(FamilyTreeContext))]
    [Migration("20190902153139_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FamilyTree.Infra.Models.ChildRelation", b =>
                {
                    b.Property<long>("ChildId");

                    b.Property<long>("ChildFamilyId");

                    b.HasKey("ChildId", "ChildFamilyId");

                    b.HasIndex("ChildFamilyId");

                    b.ToTable("ChildRelation");
                });

            modelBuilder.Entity("FamilyTree.Infra.Models.Family", b =>
                {
                    b.Property<long>("Id");

                    b.Property<DateTime?>("DivorceDate");

                    b.Property<string>("DivorcePlace");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("MarriageDate");

                    b.Property<string>("MarriagePlace");

                    b.HasKey("Id");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("FamilyTree.Infra.Models.Individual", b =>
                {
                    b.Property<long>("Id");

                    b.Property<DateTime?>("BirthDate");

                    b.Property<string>("BirthPlace");

                    b.Property<DateTime?>("DeathDate");

                    b.Property<string>("DeathPlace");

                    b.Property<string>("Firstnames");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Lastname");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.HasKey("Id");

                    b.ToTable("Individuals");
                });

            modelBuilder.Entity("FamilyTree.Infra.Models.SpouseRelation", b =>
                {
                    b.Property<long>("SpouseId");

                    b.Property<long>("SpouseFamilyId");

                    b.HasKey("SpouseId", "SpouseFamilyId");

                    b.HasIndex("SpouseFamilyId");

                    b.ToTable("SpouseRelation");
                });

            modelBuilder.Entity("FamilyTree.Infra.Models.ChildRelation", b =>
                {
                    b.HasOne("FamilyTree.Infra.Models.Family", "ChildFamily")
                        .WithMany("Children")
                        .HasForeignKey("ChildFamilyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FamilyTree.Infra.Models.Individual", "Child")
                        .WithMany("ChildFamilies")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FamilyTree.Infra.Models.SpouseRelation", b =>
                {
                    b.HasOne("FamilyTree.Infra.Models.Family", "SpouseFamily")
                        .WithMany("Spouses")
                        .HasForeignKey("SpouseFamilyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FamilyTree.Infra.Models.Individual", "Spouse")
                        .WithMany("SpouseFamilies")
                        .HasForeignKey("SpouseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
